<chapter><title>File Links</title>
	<section><title>About inodes</title>
		<para>To understand links in a file system, you first have to understand what an <command>inode</command><indexterm><primary>inode</primary></indexterm> is. When the file system stores a new file on the hard disk, it stores not only the contents (data) of the file, but also some extra properties like the name of the file, the creation date, the permissions, the owner of the file... and more. All this information (except the name of the file and the data) is stored in the inode of the file.</para>
		<para>All the inodes are created when you create the file system (with mkfs). Most of them are unused and empty, each inode has a unique number (the inode number). You can see the inode numbers with the <command>ls -li</command><indexterm><primary>ls(1)</primary></indexterm> command.</para>
		<screen>
paul@RHELv4u4:~/test$ touch file1
paul@RHELv4u4:~/test$ touch file2
paul@RHELv4u4:~/test$ touch file3
paul@RHELv4u4:~/test$ ls -li
total 12
817266 -rw-rw-r--  1 paul paul 0 Feb  5 15:38 file1
817267 -rw-rw-r--  1 paul paul 0 Feb  5 15:38 file2
817268 -rw-rw-r--  1 paul paul 0 Feb  5 15:38 file3
paul@RHELv4u4:~/test$ 
		</screen>
		<para>Three files created one after the other get three different inodes (the first column). All the information you see with this ls command resides in the inode, except for the filename (which is contained in the directory). Let's put some data in one of the files.</para>
		<screen>
paul@RHELv4u4:~/test$ ls -li
total 16
817266 -rw-rw-r--  1 paul paul  0 Feb  5 15:38 file1
817270 -rw-rw-r--  1 paul paul 92 Feb  5 15:42 file2
817268 -rw-rw-r--  1 paul paul  0 Feb  5 15:38 file3
paul@RHELv4u4:~/test$ cat file2
It is winter now and it is very cold.
We do not like the cold, we prefer hot summer nights.
paul@RHELv4u4:~/test$
		</screen>
		<para>The data that is displayed by the cat commend is not in the inode, but somewhere else on the disk. But the inode contains a pointer to the data.</para>
	</section>
	<section><title>About directories</title>
		<para>A <command>directory</command><indexterm><primary>directory</primary></indexterm> is a special kind of file. It contains a table mapping filenames to inodes. Looking at our current directory with <command>ls -ali</command><indexterm><primary>ls(1)</primary></indexterm> will display the contents of the directory file.</para>
		<screen>
paul@RHELv4u4:~/test$ ls -ali
total 32
817262 drwxrwxr-x   2 paul paul 4096 Feb  5 15:42 .
800768 drwx------  16 paul paul 4096 Feb  5 15:42 ..
817266 -rw-rw-r--   1 paul paul    0 Feb  5 15:38 file1
817270 -rw-rw-r--   1 paul paul   92 Feb  5 15:42 file2
817268 -rw-rw-r--   1 paul paul    0 Feb  5 15:38 file3
paul@RHELv4u4:~/test$ 
		</screen>
		<para>You can see five names, and the mapping to their five inodes. The dot <command>.</command><indexterm><primary>.</primary></indexterm> is a mapping to itself, and the dotdot <command>..</command><indexterm><primary>..</primary></indexterm> is a mapping to the parent directory. The three others are mappings to files.</para>
	</section>
	<section><title>Hard links</title>
		<para>When we create a <command>hard link</command><indexterm><primary>hard link</primary></indexterm> to a file with <command>ln</command><indexterm><primary>ln(1)</primary></indexterm>, then an extra entry is added in the directory. A new file name is mapped to an existing inode.</para>
		<screen>
paul@RHELv4u4:~/test$ ln file2 hardlink_to_file2
paul@RHELv4u4:~/test$ ls -li
total 24
817266 -rw-rw-r--  1 paul paul  0 Feb  5 15:38 file1
817270 -rw-rw-r--  2 paul paul 92 Feb  5 15:42 file2
817268 -rw-rw-r--  1 paul paul  0 Feb  5 15:38 file3
817270 -rw-rw-r--  2 paul paul 92 Feb  5 15:42 hardlink_to_file2
paul@RHELv4u4:~/test$ 
		</screen>
		<para>Both files have the same inode, so they will always have the same permissions and the same owner. And they will both have the same content. Actually, both files are equal now, meaning you can safely remove the original file, the hardlinked file will remain. The inode contains a counter, counting the number of hard links to itself. When the counter drops to zero, then the inode is emptied.</para>
		<para>You can use the <command>find</command><indexterm><primary>find(1)</primary></indexterm> command to look for files with a certain inode. The screenshot below proves that / and /boot are different partitions, since every <command>inode</command><indexterm><primary>inode</primary></indexterm> number is unique to the partition.</para>
		<screen>
paul@RHELv4u4:~/test$ find / -inum 2 2> /dev/null
/
/boot
/var/lib/nfs/rpc_pipefs/lockd
/proc/self
paul@RHELv4u4:~/test$ 
		</screen>
	</section>
	<section><title>Symbolic links</title>
		<para>Symbolic links (sometimes called <command>soft links</command><indexterm><primary>soft link</primary></indexterm>) do not link to inodes, but create a name to name mapping. As you can see below, the <command>symbolic link</command><indexterm><primary>symbolic link</primary></indexterm> gets an inode of its own.</para>
		<screen>
paul@RHELv4u4:~/test$ ls -li
total 32
817273 -rw-rw-r--  1 paul paul  13 Feb  5 17:06 file1
817270 -rw-rw-r--  2 paul paul 106 Feb  5 17:04 file2
817268 -rw-rw-r--  1 paul paul   0 Feb  5 15:38 file3
817270 -rw-rw-r--  2 paul paul 106 Feb  5 17:04 hardlink_to_file2
817267 lrwxrwxrwx  1 paul paul   5 Feb  5 16:55 symlink_to_file2 -> file2
paul@RHELv4u4:~/test$ 
		</screen>
		<para>Permissions on a symbolic link have no meaning, since the permissions of the target apply. Hard links are limited to their own partition (because they point to an inode), symbolic links can link anywhere (other file systems, even networked).</para>	
	</section>
	<section><title>Practice Links</title>
		<para>1. Create two files named winter.txt and summer.txt, put some text in them.</para>
		<para>2. Create a hard link to winter.txt named hlwinter.txt.</para>
		<para>3. Display the inode numbers of these three files, the hard links should have the same inode.</para>
		<para>4. Use the find command to list the two hardlinked files</para>
		<para>5. Everything about a file is in the inode, except two things : name them!</para>
		<para>6. Create a symbolic link to summer.txt called slsummer.txt.</para>
		<para>7. Find all files with inode number 2. What does this information tell you ?</para>
		<para>8. Look at the directories /etc/init.d/ /etc/rc.d/ /etc/rc3.d/ ... do you see the links ?</para>
		<para>9. Look in /lib with ls -l...</para>
	</section>
</chapter>
