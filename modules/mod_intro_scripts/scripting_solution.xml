<?hard-pagebreak?>
<section><title>solution : scripting</title>
	<para>0. Give each script a different name, keep them for later!</para>
	<para>1. Write a script that receives four parameters, and outputs them in reverse order.</para>
	<screen>echo $4 $3 $2 $1</screen>
	<para>2. Write a script that receives two parameters (two filenames) and outputs whether those files exist.</para>
	<screen>#!/bin/bash

if [ -f $1 ]
then echo $1 exists!
else echo $1 not found!
fi

if [ -f $2 ]
then echo $2 exists!
else echo $2 not found!
fi
	</screen>
	<para>3. Write a script that counts the number of files ending in .txt in the current directory.</para>
	<screen>#!/bin/bash

ls *.txt > /dev/null 2>&#038;1
if [ $? -ne 0 ] 
then echo "There are 0 files ending in .txt"
else
	let i=0
	for file in *.txt
	do
		let i++
	done
	echo "There are $i files ending in .txt"
fi
</screen>
		<para>4. Write a script that asks for two numbers, and outputs the sum and product (as shown here).</para>
		<screen>Enter a number: 5
Enter another number: 2

Sum:       5 + 2 = 7
Product:   5 x 2 = 10
		</screen>
		<screen>#!/bin/bash

echo -n "Enter a number : "
read n1

echo -n "Enter another number : "
read n2

let sum="$n1+$n2"
let pro="$n1*$n2"

echo -e "Sum\t: $n1 + $n2 = $sum" 
echo -e "Product\t: $n1 * $n2 = $pro"</screen>
		<para>5. Improve the previous script to test that the numbers are between 1 and 100, exit with an error if necessary.</para>
		<screen>echo -n "Enter a number between 1 and 100 : "
read n1

if [ $n1 -lt 1 -o $n1 -gt 100 ]
then
       echo Wrong number... 
       exit 1
fi</screen>
		<para>6. Improve the previous script to congratulate the user if the sum equals the product.</para>
		<screen>if [ $sum -eq $pro ] 
then echo Congratulations $sum == $pro
fi</screen>
		<para>7. Improve the script from question 2. to complain if it does not receive exactly two parameters.</para>
		<screen>if [ $# -ne 2 ]
then
 echo Must get two parameters...
 exit 1
fi</screen>
		<para>8. Write a script that counts from 3 to 7 and then from 7 to 3, and all this three times, once with a for loop, once with a while loop and once with a until loop. Show the teacher that it works!</para>
		<screen></screen>
		<para>9. Write a script that asks for a filename. Verify existance of the file, then verify that you own the file, and whether it is writable. If not, then make it writable.</para>
		<screen></screen>
		<para>10. Make a configuration file for the previous script. Put a logging switch in the config file, logging means writing detailed output of everything the script does to a log file in /tmp.</para>
		<para>11. A script with a case insensitive case statement, using the shopt nocasematch option. The nocasematch option is reset to the value it had before the scripts started.</para>
		<screen>#!/bin/bash
#
# Wild Animals Case Insensitive Helpdesk Advice
#

if shopt -q nocasematch; then
  nocase=yes;
else
  nocase=no;
  shopt -s nocasematch;
fi

echo -n "What animal did you see ? "
read animal

case $animal in
		"lion" | "tiger")
				echo "You better start running fast!"
		;;
		"cat")
				echo "Let that mouse go..."
		;;
		"dog")
				echo "Don't worry, give it a cookie."
		;;
		"chicken" | "goose" | "duck" )
				echo "Eggs for breakfast!"
		;;
		"liger")
				echo "Approach and say 'Ah you big fluffy kitty.'"
		;;
		"babelfish")
				echo "Did it fall out your ear ?"
		;;
		*)
				echo "You discovered an unknown animal, name it!"
		;;
esac

if [ nocase = yes ] ; then
        shopt -s nocasematch;
else
        shopt -u nocasematch;
fi</screen>
	<para>12. If time permits (or if you are waiting for other students to finish this practice), take a look at linux system scripts in /etc/init.d and /etc/rc.d and try to understand them. Where does execution of a script start in /etc/init.d/samba ? There are also some hidden scripts in ~, we will discuss them later.</para>
	<para>Always take time to properly <command>document</command> every script that you write!</para>
	<para>Image copied from <command>xkcd.com</command><indexterm><primary>http://xkcd.com</primary></indexterm>.</para>
	<mediaobject><imageobject><imagedata fileref="images/command_line_fu.jpg" format="EPS" align="center"></imagedata></imageobject></mediaobject>	
</section>
