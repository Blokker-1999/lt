<section><title>How an Operating System works</title>
	<para>The tasks of an operating system include management of <command>hardware</command>, <command>memory</command>, <command>processes</command> and <command>applications</command>. An operating system consists of a software <command>kernel</command> and a number of tools, and can be considered a <command>platform</command> for applications.</para>
	<para>To manage the <command>hardware</command>, the operating system uses <command>interrupts</command> and <command>device drivers</command>. A monolithic kernel like Linux can dynamically load these in memory as <command>modules</command>.</para>
	<para>A computer's <command>memory</command> comes in different speeds and prices, the faster, the more expensive. Ordered from fastest to slowest we have: <command>registers</command> inside the CPU, <command>cache</command> on the CPU, <command>RAM modules</command> and <command>hard disks</command>. An operating system may start <command>paging</command>, using a part of the hard disk as memory storage.</para>
	<para>A <command>process</command> is compiled source code that is currently running on the computer. Only one process at a time can run on a <command>CPU</command> or processor. The operating system will provide <command>multitasking</command> features by giving every process a small amount of time (about 50ms max) to run on the CPU, before interrupting it, and giving control to the next process. For us humans, applications seem to run at the same time. When more than one CPU is present in the system, the operating system can support <command>multiprocessing</command>. This really enables applications to run simultaneously.</para>
	<para>Applications receive a vast amount of <command>virtual address space</command> from the operating system, so they don't interfere with other applications.</para>
</section>
