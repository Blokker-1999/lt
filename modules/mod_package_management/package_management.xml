<section><title>About Installing Software</title>
	<para>Software for your Linux distribution is not scattered all over the place like some other OS'ses, but is in general managed in a central distributed repository. This means that applications in the repository are tested for your distribution. Installing this software is very easy. The problem begins when you need software from outside of the central repository.</para>
	<para>You can install software from the repository on Linux in different ways. Beginners should use the graphical software installation tool that is provided by the distribution (Synaptic on Debian, Add/Remove Software on Ubuntu, Yast on Suse, ...). More advanced people tend to use the command line (rpm, yum, dpkg, aptitude). A third option is to download vanilla source code and compile the software yourself, providing the application is open source.</para>
</section>
<section><title>RPM (Red Hat, Suse, ...)</title>
	<para>The <command>RPM Package Manager</command><indexterm><primary>rpm</primary></indexterm> can be used on the command line with <command>rpm</command> or in a graphical way going to Applications--System Settings--Add/Remove Applications. Type <command>rpm --help</command> to see some of the options. Software distributed in the rpm format will be named foo-version.platform.rpm .</para>	
	<para>To obtain a list of all installed software, use the <command>rpm -qa</command> command. To check whether a package is provided by Red Hat, use the <command>--redhatprovides</command> option.</para>
	<screen>
root@RHELv4u4:~# rpm -q --redhatprovides bash
bash-3.0-19.3
root@RHELv4u4:~# rpm -q --redhatprovides gcc
gcc-3.4.6-3
root@RHELv4u4:~# rpm -q --redhatprovides laika
no package provides laika
root@RHELv4u4:~# 
	</screen>	
	<para>To verify whether a package is installed, use -q.</para>
	<screen>
root@RHELv4u4:~# rpm -q gcc
gcc-3.4.6-3
root@RHELv4u4:~# rpm -q laika
package laika is not installed
root@RHELv4u4:~# 
	</screen>
	<para>To install or upgrade a package, use the -Uvh switches.</para>
	<screen>rpm -Uvh gcc-3.4.6-3</screen>
	<para>To remove a package, use the -e switch.</para>
	<screen>rpm -e gcc-3.4.6-3</screen>
</section>
<section><title>Yum (Fedora)</title>
	<para><command>Yum</command><indexterm><primary>yum</primary></indexterm> is an easier way to work with rpm packages. It is installed by default on Fedora.</para>
	<para>Issue this to see a list of available packages.</para>
	<screen>yum list available</screen>
	<para>To install an application.</para>
	<screen>yum install $appName</screen>
	<para>To upgrade all applications.</para>
	<screen>yum update</screen>
	<para>To search for a package containing a certain string in the description or name.</para>
	<screen>yum search $string</screen>
</section>
<section><title>dpkg and Aptitude (Debian, Ubuntu, ...)</title>
	<para>Debian uses .deb packages, managed by <command>dpkg</command><indexterm><primary>dpkg</primary></indexterm>, or more commonly today by <command>aptitude</command><indexterm><primary>aptitude</primary></indexterm>. The big advantage of aptitude is it's ease of use and it's power to handle dependencies.</para>
	<para>To synchronize with the repositories.</para>
	<screen>aptitude update</screen>
	<para>To patch and upgrade all software to the latest version..</para>
	<screen>aptitude upgrade</screen>
	<para>To install an application with all dependencies.</para>
	<screen>aptitude install $appName</screen>
	<para>To search the repositories for applications that contain a certain string in their name or description.</para>
	<screen>aptitude search $string</screen>
	<para>To remove an application and all unused files.</para>
	<screen>aptitude remove $appName</screen>
</section>
<section><title>Downloading software</title>
	<para>First and most important, whenever you download software, start by reading the README file!</para>
	<para>Normally the readme will explain what to do after download. You will probably receive a .tar.gz or a .tgz file. Read the documentation, then put the compressed file in a directory. You can use the following to find out where the package wants to install.</para>
	<screen>tar tvzpf $downloadedFile.tgz</screen>
	<para>You unpack them like with <command>tar xzf</command><indexterm><primary>tar(1)</primary></indexterm>, it will create a directory called applicationName-1.2.3</para>
	<screen>tar xzf $applicationName.tgz</screen>
	<para>Replace the z with a j when the file ends in .tar.bz2. The <command>tar</command>, gzip and bzip2 commands are explained in detail later.</para>
	<para>If you download a .deb file, then you'll have to use dpkg to install it, .rpm's can be installed with the rpm command. Sometimes people use the <command>alien</command><indexterm><primary>alien(1)</primary></indexterm> command to convert between package formats.</para>
</section>
<section><title>Compiling software</title>
	<para>First and most important, whenever you download source code for installation, start by reading the README file!</para>
	<para>Usually the steps are always the same three : running <command>./configure</command><indexterm><primary>./configure</primary></indexterm> followed by <command>make</command><indexterm><primary>make(1)</primary></indexterm> (which is the actual compiling) and then by <command>make install</command> to copy the files to their proper location.</para>
	<screen>
./configure
make
make install
	</screen>
</section>
<section><title>Practice Installing software</title>
	<para>1. Find the GUI app on all computers to add and remove applications.</para>
	<para>2. Use aptitude or yum to install the 'dict' and 'wesnoth' applications.</para>
	<para>3. Search the internet for 'webmin' and install it.</para>
	<para>4. If time permits, uninstall Samba from the ubuntu machine, download the latest version from samba.org and install it.</para>
</section>
