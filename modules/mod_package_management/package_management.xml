<section><title>Terminology</title>
	<section><title>repositories</title>
		<para>Most software for your Linux distribution is available in a central distributed <command>repository</command><indexterm><primary>repository</primary></indexterm>. This means that applications in the repository are tested for your distribution and very easy to install with a GUI or command line installer.</para>
		<para>The GUI is available via the standard menu (look for Add/Remove Software). The command line is explained below in detail.</para>
	</section>
	<section><title>RPM based</title>
		<para>Red Hat, Fedora, OpenSUSE, Mandriva, Red Flag and others use <command>.rpm</command><indexterm><primary>rpm(8)</primary></indexterm> packages. The tool to manage software here is called <command>yum</command>, which uses the <command>rpm</command> command in background.</para>
	</section>
	<section><title>Debian based</title>
		<para>Debian, Ubuntu, Linux Mint and all derivatives from Debian and Ubuntu use <command>.deb</command><indexterm><primary>deb(5)</primary></indexterm> packages. To manage software on these systems, you can use <command>aptitude</command><indexterm><primary>aptitude(8)</primary></indexterm>. <command>aptitude</command> is a front end for <command>dpkg</command><indexterm><primary>dpkg(8)</primary></indexterm>.</para>
	</section>
	<section><title>building from source</title>
		<para>With <command>open source</command> software, there is always the option to compile software yourself. This is discussed at the end of this chapter.</para>
	</section>
	<section><title>dependency</title>
		<para>Some packages need other packages to function. Tools like <command>aptitude</command> and <command>yum</command> will install all dependencies you need. When using <command>dpkg</command> or the <command>rpm</command> command, or when building from source, you will need to install dependencies yourself.</para>
	</section>
</section>
<section><title>Red Hat Package Manager</title>
		<section><title>About rpm</title>
			<para>The <command>Red Hat Package Manager</command><indexterm><primary>rpm</primary></indexterm> can be used on the command line with <command>rpm</command> or in a graphical way going to Applications--System Settings--Add/Remove Applications. Type <command>rpm --help</command> to see some of the options.</para>
			<para>Software distributed in the rpm format will be named <command>foo-version.platform.rpm</command> .</para>	
		</section>
		<section><title>rpm -qa</title>
			<para>To obtain a list of all installed software, use the <command>rpm -qa</command> command.</para>
			<screen>
[root@RHEL52 ~]# rpm -qa | grep samba
system-config-samba-1.2.39-1.el5
samba-3.0.28-1.el5_2.1
samba-client-3.0.28-1.el5_2.1
samba-common-3.0.28-1.el5_2.1
			</screen>
		</section>
		<section><title>rpm -q</title>
			<para>To verify whether one package is installed, use <command>rpm -q</command>.</para>
			<screen>
root@RHELv4u4:~# rpm -q gcc
gcc-3.4.6-3
root@RHELv4u4:~# rpm -q laika
package laika is not installed
			</screen>
		</section>
		<section><title>rpm -q --redhatprovides</title>
			<para>To check whether a package is provided by Red Hat, use the <command>--redhatprovides</command> option.</para>
			<screen>
root@RHELv4u4:~# rpm -q --redhatprovides bash
bash-3.0-19.3
root@RHELv4u4:~# rpm -q --redhatprovides gcc
gcc-3.4.6-3
root@RHELv4u4:~# rpm -q --redhatprovides laika
no package provides laika
			</screen>	
		</section>
		<section><title>rpm -Uvh</title>
			<para>To install or upgrade a package, use the -Uvh switches. The -U switch is the same as -i for install, except that older versions of the software are removed. The -vh switches are for nicer output.</para>
			<screen>
root@RHELv4u4:~# rpm -Uvh gcc-3.4.6-3
			</screen>
		</section>
		<section><title>rpm -e</title>
			<para>To remove a package, use the -e switch.</para>
			<screen>
root@RHELv4u4:~# rpm -e gcc-3.4.6-3
			</screen>
			<para><command>rpm -e</command> verifies dependencies, and thus will prevent you from accidentaly erasing packages that are needed by other packages.</para>
			<screen>
[root@RHEL52 ~]# rpm -e gcc-4.1.2-42.el5
error: Failed dependencies:
gcc = 4.1.2-42.el5 is needed by (installed) gcc-c++-4.1.2-42.el5.i386
gcc = 4.1.2-42.el5 is needed by (installed) gcc-gfortran-4.1.2-42.el5.i386
gcc is needed by (installed) systemtap-0.6.2-1.el5_2.2.i386
			</screen>
		</section>
		<section><title>/var/lib/rpm</title>
			<para>The <command>rpm</command> database is located at <command>/var/lib/rpm</command><indexterm><primary>/var/lib/rpm</primary></indexterm>. This database contains all meta information about packages that are installed (via rpm). It keeps track of all files, which enables complete removes of software.</para>
	</section>
	<section><title>yum</title>
		<para>The <command>Yellowdog Updater, Modified (yum)</command><indexterm><primary>yum(8)</primary></indexterm> is an easier command to work with rpm packages. It is installed by default on Fedora and is optional on Red Hat Enterprise Linux.</para>
		<para>Issue <command>yum list available</command> to see a list of available packages.</para>
		<screen>yum list available</screen>
		<para>To search for a package containing a certain string in the description or name use <command>yum search $string</command>.</para>
		<screen>yum search $string</screen>
		<para>To install an application, use <command>yum install $package</command>. Naturally yum will install all the necesary dependencies.</para>
		<screen>yum install $package</screen>
		<para>To bring all applications up to date, by downloading and installing them, issue <command>yum update</command>. All software that was installed via yum will be updated to the latest version that is available in the repository.</para>
		<screen>yum update</screen>
		<para>The configuration of your yum repositories is done in <command>/etc/yum/yum.conf</command> and <command>/etc/yum/repos.d/</command>.</para>
	</section>
	<section><title>up2date</title>
		<para><command>up2date</command> is the Red Hat Update Agent. It is available on Red Hat Enterprise Linux and serves as a connection to RHN (Red Hat Network). It has simple switches like -d for download, -i for install and -l for list (of packages that can be updated).</para>
	</section>
</section>
<section><title>Debian Package Management</title>
	<section><title>dpkg -l</title>
		<para>The low level tool to work with <command>.deb</command> packages is <command>dpkg</command><indexterm><primary>dpkg(8)</primary></indexterm>. Here you see how to obtain a list of all installed packages. The ii at the beginning means the package is installed.</para>
		<screen>
root@laika:~# dpkg -l | grep gcc-4.2
ii gcc-4.2      4.2.4-1ubuntu3 The GNU C compiler
ii gcc-4.2-base 4.2.4-1ubuntu3 The GNU Compiler Collection (base package)
		</screen>
	</section>
	<section><title>dpkg</title>
		<para>You could use <command>dpkg -i</command> to install a package and <command>dpkg -r</command> to remove a package, but you'd have to manually keep track of dependencies.</para>
	</section>
	<section><title>aptitude</title>
		<para>Most people use <command>aptitude</command> for package management on Debian and Ubuntu Systems.</para>
		<para>To synchronize with the repositories.</para>
		<screen>aptitude update</screen>
		<para>To patch and upgrade all software to the latest version..</para>
		<screen>aptitude safe-upgrade</screen>
		<para>To install an application with all dependencies.</para>
		<screen>aptitude install $package</screen>
		<para>To search the repositories for applications that contain a certain string in their name or description.</para>
		<screen>aptitude search $string</screen>
		<para>To remove an application and all unused files.</para>
		<screen>aptitude remove $package</screen>
	</section>
</section>
	<section><title>alien</title>
		<para></para>
	</section>
<section><title>Downloading software</title>
	<para>First and most important, whenever you download software, start by reading the README file!</para>
	<para>Normally the readme will explain what to do after download. You will probably receive a .tar.gz or a .tgz file. Read the documentation, then put the compressed file in a directory. You can use the following to find out where the package wants to install.</para>
	<screen>tar tvzpf $downloadedFile.tgz</screen>
	<para>You unpack them like with <command>tar xzf</command><indexterm><primary>tar(1)</primary></indexterm>, it will create a directory called applicationName-1.2.3</para>
	<screen>tar xzf $applicationName.tgz</screen>
	<para>Replace the z with a j when the file ends in .tar.bz2. The <command>tar</command>, <command>gzip</command> and <command>bzip2</command> commands are explained in detail later.</para>
	<para>If you download a .deb file, then you'll have to use dpkg to install it, .rpm's can be installed with the rpm command. Sometimes people use the <command>alien</command><indexterm><primary>alien(1)</primary></indexterm> command to convert between package formats.</para>
</section>
<section><title>Compiling software</title>
	<para>First and most important, whenever you download source code for installation, start by reading the README file!</para>
	<para>Usually the steps are always the same three : running <command>./configure</command><indexterm><primary>./configure</primary></indexterm> followed by <command>make</command><indexterm><primary>make(1)</primary></indexterm> (which is the actual compiling) and then by <command>make install</command> to copy the files to their proper location.</para>
	<screen>
./configure
make
make install
	</screen>
</section>
<section><title>Practice: Installing software</title>
	<para>1. Find the Graphical application on all computers to add and remove applications.</para>
	<para>2. Verify on both systems whether gcc is installed.</para>
	<para>3. Use aptitude or yum to search for and install the 'dict', 'samba' and 'wesnoth' applications. Did you find all them all ?</para>
	<para>4. Search the internet for 'webmin' and install it.</para>
	<para>5. If time permits, uninstall Samba from the ubuntu machine, download the latest version from samba.org and install it.</para>
</section>
<section><title>Solution: Installing software</title>
	<para>1. Find the Graphical application on all computers to add and remove applications.</para>
	<screen></screen>
	<para>2. Verify on both systems whether gcc is installed.</para>
	<screen>dpkg -l | grep gcc</screen>
	<screen>rpm -qa | grep gcc</screen>
	<para>3. Use aptitude or yum to search for and install the 'dict', 'samba' and 'wesnoth' applications. Did you find all them all ?</para>
	<screen>aptitude search wesnoth (Debian, Ubuntu and family)</screen>
	<screen>yum search wesnoth (Red Hat and family)</screen>
	<para>4. Search the internet for 'webmin' and install it.</para>
	<screen>Google should point you to webmin.com.</screen>
	<screen>There are several formats available there choose .rpm, .deb or .tgz .</screen>
	<para>5. If time permits, uninstall Samba from the ubuntu machine, download the latest version from samba.org and install it.</para>
	<screen></screen>
</section>
