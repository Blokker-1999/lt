<?hard-pagebreak?>
<section><title>signalling processes</title>
	<section><title>kill</title>
		<para>The <command>kill</command><indexterm><primary>kill(1)</primary></indexterm> command will kill (or stop) a process. The screenshot shows how to use a standard <command>kill</command> to stop the process with <command>pid</command> 1942.</para>
		<screen>
paul@ubuntu910:~$ kill 1942
paul@ubuntu910:~$
		</screen>
		<para>By using the <command>kill</command> we are sending a <command>signal</command> to the process.</para>
	</section>
	<section><title>list signals</title>
		<para>Running processes can receive signals from each other or from the users. You can have a list of signals by typing <command>kill -l</command><indexterm><primary>kill(1)</primary></indexterm>, that is a letter <command>l</command>, not the number 1.</para>
		<screen>
[paul@RHEL4a ~]$ kill -l
1) SIGHUP       2) SIGINT       3) SIGQUIT      4) SIGILL
5) SIGTRAP      6) SIGABRT      7) SIGBUS       8) SIGFPE
9) SIGKILL     10) SIGUSR1     11) SIGSEGV     12) SIGUSR2
13) SIGPIPE     14) SIGALRM     15) SIGTERM     17) SIGCHLD
18) SIGCONT     19) SIGSTOP     20) SIGTSTP     21) SIGTTIN
22) SIGTTOU     23) SIGURG      24) SIGXCPU     25) SIGXFSZ
26) SIGVTALRM   27) SIGPROF     28) SIGWINCH    29) SIGIO
30) SIGPWR      31) SIGSYS      34) SIGRTMIN    35) SIGRTMIN+1
36) SIGRTMIN+2  37) SIGRTMIN+3  38) SIGRTMIN+4  39) SIGRTMIN+5
40) SIGRTMIN+6  41) SIGRTMIN+7  42) SIGRTMIN+8  43) SIGRTMIN+9
44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12 47) SIGRTMIN+13
48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14 51) SIGRTMAX-13
52) SIGRTMAX-12 53) SIGRTMAX-11 54) SIGRTMAX-10 55) SIGRTMAX-9
56) SIGRTMAX-8  57) SIGRTMAX-7  58) SIGRTMAX-6  59) SIGRTMAX-5
60) SIGRTMAX-4  61) SIGRTMAX-3  62) SIGRTMAX-2  63) SIGRTMAX-1
64) SIGRTMAX
[paul@RHEL4a ~]$ 
		</screen>
	</section>
	<section><title>kill -1 (SIGHUP)</title>
		<para>It is common on Linux to use the first signal <command>SIGHUP</command><indexterm><primary>SIGHUP</primary></indexterm> (or HUP or 1) to tell a process that it should re-read its configuration file. Thus, the <command>kill -1 1</command> command forces the <command>init</command> process (<command>init</command> always runs with <command>pid 1</command>) to re-read its configuration file.</para>
		<screen>
root@deb503:~# kill -1 1
root@deb503:~#
		</screen>
		<para>It is up to the developer of the process to decide whether the process can do this running, or whether it needs to stop and start. It is up to the user to read the documentation of the program.</para>
	</section>
	<section><title>kill -15 (SIGTERM)</title>
		<para>The <command>SIGTERM</command> signal is also called a <command>standard kill</command>. Whenever <command>kill</command> is executed without specifying the signal, a <command>kill -15</command> is assumed.</para>
		<para>Both commands in the screenshot below are identical.</para>
		<screen>
paul@ubuntu910:~$ kill 1942
paul@ubuntu910:~$ kill -15 1942
		</screen>
	</section>
	<section><title>kill -9 (SIGKILL)</title>
		<para>The <command>SIGKILL</command> is different from most other signals in that it is not being sent to the process, but to the <command>Linux kernel</command>. A <command>kill -9</command> is also called a <command>sure kill</command>. The <command>kernel</command> will shoot down the process. As a developer you have no means to intercept a <command>kill -9</command> signal.</para>
		<screen>
root@rhel53 ~# kill -9 3342
		</screen>
	</section>
	<section><title>killall</title>
		<para>The <command>killall</command><indexterm><primary>killall(1)</primary></indexterm> command will also default to sending a <command>signal 15</command><indexterm><primary>SIGTERM</primary></indexterm> to the processes.</para>
		<para>This command and its SysV counterpart <command>killall5</command> can by used when shutting down the system. This screenshot shows how Red Hat Enterprise Linux 5.3 uses <command>killall5</command> when halting the system.</para>
		<screen>
root@rhel53 ~# grep killall /etc/init.d/halt
action $"Sending all processes the TERM signal..." /sbin/killall5 -15
action $"Sending all processes the KILL signal..."  /sbin/killall5 -9
		</screen>
	</section>
	<section><title>pkill</title>
		<para>You can use the <command>pkill</command><indexterm><primary>pkill(1)</primary></indexterm> command to kill a process by its command name.</para>
		<screen>
[paul@RHEL5 ~]$ sleep 1000 &#038;
[1] 30203
[paul@RHEL5 ~]$ pkill sleep
[1]+  Terminated              sleep 1000
[paul@RHEL5 ~]$ 
		</screen>
	</section>
	<section><title>top</title>
		<para>Inside <command>top</command><indexterm><primary>top</primary></indexterm> the <command>k</command> key allows you to select a <command>signal</command> and <command>pid</command> to kill. Below is a partial screenshot of the line just below the summary in <command>top</command> after pressing <command>k</command>.</para>
		<screen>
PID to kill: 1932

Kill PID 1932 with signal [15]: 9
		</screen>
	</section>
	<section><title>SIGSTOP and SIGCONT</title>
		<para>A running process can be <command>suspended</command> when it receives a <command>SIGSTOP</command> signal. This is the same as <command>kill -19</command> on Linux, but might have a different number in other Unix systems.</para>
		<para>A <command>suspended</command> process does not use any <command>cpu cycles</command>, but it stays in memory and can be re-animated with a <command>SIGCONT</command> signal (<command>kill -18</command> on Linux).</para>
		<para>Both signals will be used in the section about <command>background</command> processes.</para>
	</section>
</section>
