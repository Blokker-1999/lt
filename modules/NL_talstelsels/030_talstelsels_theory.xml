<?hard-pagebreak?>
<section><title>decimaal of tientallig stelsel</title>
	<para>In het <command>decimaal</command> stelsel zijn er <command>tien</command> cijfers waarmee we kunnen werken, dat zijn in opklimmende volgorde 0, 1, 2, 3, 4, 5, 6, 7, 8 en 9. Met deze cijfers kunnen we van nul tot negen tellen.</para>
	<para>Als we nog verder willen tellen, dan moeten we twee cijfers combineren. Het eerste cijfer heeft dan een grotere waarde dan het tweede. De waarde van het eerste cijfer is het <command>tienvoud</command> van zijn nominale waarde.</para>
	<para>Willen we nog verder, dan zetten we nog een extra cijfer voor de bestaande twee, en vermenigvuldigen deze waarde met <command>tien en nog eens tien</command>. Deze methode laat toe om oneindig ver te tellen.</para>
	<para>Hieronder de decimale getallen 42, 33 en 8472 en de waarden van elk individueel cijfer. We vermenigvuldigen telkens met <command>tien</command> omdat we in het <command>tien</command>tallig stelsel aan het werken zijn.</para>
	<para><mediaobject><imageobject><imagedata fileref="images/leren_tellen_decimaal.png" format="EPS" align="center"></imagedata></imageobject></mediaobject></para>
	<para>Hieronder ziet U het getal vijfhonderdeenendertig miljoen achtduizend en acht, en een verkorte berekening van de waarde van elke cijfer.</para>
	<para><mediaobject><imageobject><imagedata fileref="images/leren_tellen_decimaal2.png" format="EPS" align="center"></imagedata></imageobject></mediaobject></para>
</section>
<?hard-pagebreak?>
<section><title>binair of tweetallig stelsel</title>
	<para>In het <command>binair</command> stelsel zijn er <command>twee</command> cijfers waarmee we kunnen werken, dat zijn in opklimmende volgorde 0 en 1. Met deze cijfers kunnen we van nul tot een tellen.</para>
	<para>Als we nog verder willen tellen, dan moeten we twee cijfers combineren. Het eerste cijfer heeft dan een grotere waarde dan het tweede. De waarde van het eerste cijfer is het <command>tweevoud</command> van zijn nominale waarde.</para>
	<para>Willen we nog verder, dan zetten we nog een extra cijfer voor de bestaande twee, en vermenigvuldigen deze waarde met <command>twee en nog eens twee</command>. Deze methode laat toe om oneindig ver te tellen.</para>
	<para>Hieronder de binaire getallen 11, 10 en 1011 en de waarden van elk individueel cijfer. We vermenigvuldigen telkens met <command>twee</command> omdat we in het <command>twee</command>tallig stelsel aan het werken zijn.</para>
	<para><mediaobject><imageobject><imagedata fileref="images/leren_tellen_binair.png" format="EPS" align="center"></imagedata></imageobject></mediaobject></para>
	<para>Hieronder ziet U het getal 11101011, en een verkorte berekening van de waarde van elke cijfer.</para>
	<para><mediaobject><imageobject><imagedata fileref="images/leren_tellen_binair2.png" format="EPS" align="center"></imagedata></imageobject></mediaobject></para>
</section>
<?hard-pagebreak?>
<section><title>decimaal en binair naast elkaar</title>
	<para>We zetten het decimale en binaire talstelsel even naast elkaar.</para>
	<para><mediaobject><imageobject><imagedata fileref="images/decimal_binary_lego.png" format="EPS" align="center"></imagedata></imageobject></mediaobject></para>
</section>
<?hard-pagebreak?>
<section><title>hexadecimaal of zestientallig stelsel</title>
	<para>In het <command>hexadecimaal</command> stelsel zijn er <command>zestien</command> cijfers waarmee we kunnen werken, dat zijn in opklimmende volgorde 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E en F. Met deze cijfers kunnen we van nul tot F tellen.</para>
	<para>Als we nog verder willen tellen, dan moeten we twee cijfers combineren. Het eerste cijfer heeft dan een grotere waarde dan het tweede. De waarde van het eerste cijfer is het <command>zestienvoud</command> van zijn nominale waarde.</para>
	<para>Willen we nog verder, dan zetten we nog een extra cijfer voor de bestaande twee, en vermenigvuldigen deze waarde met <command>zestien en nog eens zestien</command>.</para>
</section>
<section><title>octaal of achttallig stelsel</title>
	<para>In het <command>octaal</command> stelsel zijn er <command>acht</command> cijfers waarmee we kunnen werken, dat zijn in opklimmende volgorde 0, 1, 2, 3, 4, 5, 6 en 7. Met deze cijfers kunnen we van nul tot zeven tellen.</para>
	<para>Als we nog verder willen tellen, dan moeten we twee cijfers combineren. Het eerste cijfer heeft dan een grotere waarde dan het tweede. De waarde van het eerste cijfer is het <command>achtvoud</command> van zijn nominale waarde.</para>
	<para>Willen we nog verder, dan zetten we nog een extra cijfer voor de bestaande twee, en vermenigvuldigen deze waarde met <command>acht en nog eens acht</command>.</para>
</section>
<?hard-pagebreak?>
<table frame='all'><title>vier talstelsels naast elkaar</title>
<?dbfo table-width="80%" ?>
<tgroup cols='4' align='left' colsep='1' rowsep='1'>
<colspec colname='c1' colwidth="1*" align="center"/>
<colspec colname='c2' colwidth="1*" align="center"/>
<colspec colname='c3' colwidth="1*" align="center"/>
<colspec colname='c4' colwidth="1*" align="center"/>
<thead>
<row>
  <entry>decimaal</entry>
  <entry>binair</entry>
  <entry>hexadecimaal</entry>
  <entry>octaal</entry>
</row>
</thead>
<tbody>
<row>
  <entry>0</entry>
  <entry>0</entry>
  <entry>0</entry>
  <entry>0</entry>
</row>
<row>
  <entry>1</entry>
  <entry>1</entry>
  <entry>1</entry>
  <entry>1</entry>
</row>
<row>
  <entry>2</entry>
  <entry>10</entry>
  <entry>2</entry>
  <entry>2</entry>
</row>
<row>
  <entry>3</entry>
  <entry>11</entry>
  <entry>3</entry>
  <entry>3</entry>
</row>
<row>
  <entry>4</entry>
  <entry>100</entry>
  <entry>4</entry>
  <entry>4</entry>
</row>
<row>
  <entry>5</entry>
  <entry>101</entry>
  <entry>5</entry>
  <entry>5</entry>
</row>
<row>
  <entry>6</entry>
  <entry>110</entry>
  <entry>6</entry>
  <entry>6</entry>
</row>
<row>
  <entry>7</entry>
  <entry>111</entry>
  <entry>7</entry>
  <entry>7</entry>
</row>
<row>
  <entry>8</entry>
  <entry>1000</entry>
  <entry>8</entry>
  <entry>10</entry>
</row>
<row>
  <entry>9</entry>
  <entry>1001</entry>
  <entry>9</entry>
  <entry>11</entry>
</row>
<row>
  <entry>10</entry>
  <entry>1010</entry>
  <entry>A</entry>
  <entry>12</entry>
</row>
<row>
  <entry>11</entry>
  <entry>1011</entry>
  <entry>B</entry>
  <entry>13</entry>
</row>
<row>
  <entry>12</entry>
  <entry>1100</entry>
  <entry>C</entry>
  <entry>14</entry>
</row>
<row>
  <entry>13</entry>
  <entry>1101</entry>
  <entry>D</entry>
  <entry>15</entry>
</row>
<row>
  <entry>14</entry>
  <entry>1110</entry>
  <entry>E</entry>
  <entry>16</entry>
</row>
<row>
  <entry>15</entry>
  <entry>1111</entry>
  <entry>F</entry>
  <entry>17</entry>
</row>
<row>
  <entry>16</entry>
  <entry>10000</entry>
  <entry>10</entry>
  <entry>20</entry>
</row>
<row>
  <entry>17</entry>
  <entry>10001</entry>
  <entry>11</entry>
  <entry>21</entry>
</row>
<row>
  <entry>18</entry>
  <entry>10010</entry>
  <entry>12</entry>
  <entry>22</entry>
</row>
<row>
  <entry>19</entry>
  <entry>10011</entry>
  <entry>13</entry>
  <entry>23</entry>
</row>
<row>
  <entry>20</entry>
  <entry>10100</entry>
  <entry>14</entry>
  <entry>24</entry>
</row>
<row>
  <entry>21</entry>
  <entry>10101</entry>
  <entry>15</entry>
  <entry>25</entry>
</row>
<row>
  <entry>22</entry>
  <entry>10110</entry>
  <entry>16</entry>
  <entry>26</entry>
</row>
<row>
  <entry>23</entry>
  <entry>10111</entry>
  <entry>17</entry>
  <entry>27</entry>
</row>
<row>
  <entry>24</entry>
  <entry>11000</entry>
  <entry>18</entry>
  <entry>30</entry>
</row>
<row>
  <entry>25</entry>
  <entry>11001</entry>
  <entry>19</entry>
  <entry>31</entry>
</row>
<row>
  <entry>26</entry>
  <entry>11010</entry>
  <entry>1A</entry>
  <entry>32</entry>
</row>
<row>
  <entry>27</entry>
  <entry>11011</entry>
  <entry>1B</entry>
  <entry>33</entry>
</row>
<row>
  <entry>28</entry>
  <entry>11100</entry>
  <entry>1C</entry>
  <entry>34</entry>
</row>
<row>
  <entry>29</entry>
  <entry>11101</entry>
  <entry>1D</entry>
  <entry>35</entry>
</row>
<row>
  <entry>30</entry>
  <entry>11110</entry>
  <entry>1E</entry>
  <entry>36</entry>
</row>
<row>
  <entry>31</entry>
  <entry>11111</entry>
  <entry>1F</entry>
  <entry>37</entry>
</row>
<row>
  <entry>32</entry>
  <entry>100000</entry>
  <entry>20</entry>
  <entry>40</entry>
</row>
</tbody>
</tgroup>
</table>
<?hard-pagebreak?>
<section><title>oefening talstelsels</title>
	<para>1. Vul de ontbrekende waarden in. (Octaal is niet belangrijk.)</para>
<table frame='all'><title>oefening talstelsels</title>
<?dbfo table-width="90%" ?>
<tgroup cols='4' align='left' colsep='1' rowsep='1'>
<colspec colname='c1' colwidth="1*" align="center"/>
<colspec colname='c2' colwidth="1*" align="center"/>
<colspec colname='c3' colwidth="1*" align="center"/>
<colspec colname='c4' colwidth="1*" align="center"/>
<thead>
<row>
  <entry>decimaal</entry>
  <entry>binair</entry>
  <entry>hexadecimaal</entry>
  <entry>octaal</entry>
</row>
</thead>
<tbody>
<row>
  <entry>5</entry>
  <entry></entry>
  <entry></entry>
  <entry></entry>
</row>
<row>
  <entry></entry>
  <entry>100</entry>
  <entry></entry>
  <entry></entry>
</row>
<row>
  <entry></entry>
  <entry></entry>
  <entry>FF</entry>
  <entry></entry>
</row>
<row>
  <entry>192</entry>
  <entry></entry>
  <entry></entry>
  <entry>300</entry>
</row>
<row>
  <entry>168</entry>
  <entry></entry>
  <entry></entry>
  <entry></entry>
</row>
<row>
  <entry></entry>
  <entry></entry>
  <entry>0A</entry>
  <entry></entry>
</row>
<row>
  <entry>33</entry>
  <entry></entry>
  <entry></entry>
  <entry></entry>
</row>
<row>
  <entry></entry>
  <entry>101010</entry>
  <entry></entry>
  <entry></entry>
</row>
</tbody>
</tgroup>
</table>
	<para>2. Schrijf de cijfers C0 A8 01 01 in decimale vorm.</para>
	<para>3. Hoe schrijf je 255.255.255.0 in hexadecimale vorm ?</para>
	<para>4. En nu een moeilijke vraag : Wanneer is 6 maal 9 gelijk aan 42 ?</para>
</section>
<?hard-pagebreak?>
<section><title>veel voorkomende getallen</title>
	<para>Het layer 2 broadcast mac adres bestaat uit 48 eentjes, maar wordt altijd hexadecimaal voorgesteld:</para>
	<screen>FF:FF:FF:FF:FF:FF</screen>
	<para>Standaard <command>classful</command> subnet masks (we bespreken dit later in detail) komen soms decimaal, soms hexadecimaal voor in de uitvoer van systeembeheer programma's:</para>
	<screen>decimaal      hexadecimaal
255.0.0.0     FF000000
255.255.0.0   FFFF0000
255.255.255.0 FFFFFF00</screen>
	<para>Alle data en alle applicaties op de computer bestaan uit bits. Als je in een tekstbestand het getal <command>42</command> wil bewaren, dan worden de volgende bits (in een volledige byte) bewaard:</para>
	<screen>00101010</screen>
</section>
<section><title>machten van twee</title>
	<para>De <command>map van het internet</command> van pagina 16 bestaat uit exact 256 vakjes, in een byte kunnen 8 bits, <command>ip-adressen</command> bestaan uit 32 bits, het aantal mogelijke waarden die je in een <command>byte</command> kan steken is 256, heel wat encryptie werkt heden met sleutels van 128-bits, niet toevallig allemaal machten van het getal twee!</para>
	<para>Machten van twee zijn eenvoudiger te schrijven in het binaire of het hexadecimale stelsel.</para>
<table frame='all'><title>machten van twee</title>
<?dbfo table-width="70%" ?>
<tgroup cols='3' align='left' colsep='1' rowsep='1'>
<colspec colname='c1' colwidth="1*" align="center"/>
<colspec colname='c2' colwidth="1*" align="center"/>
<colspec colname='c3' colwidth="1*" align="center"/>
<thead>
<row>
  <entry>decimaal</entry>
  <entry>binair</entry>
  <entry>hexadecimaal</entry>
</row>
</thead>
<tbody>
<row>
  <entry>2</entry>
  <entry>10</entry>
  <entry>2</entry>
</row>
<row>
  <entry>4</entry>
  <entry>100</entry>
  <entry>4</entry>
</row>
<row>
  <entry>8</entry>
  <entry>1000</entry>
  <entry>8</entry>
</row>
<row>
  <entry>16</entry>
  <entry>10000</entry>
  <entry>10</entry>
</row>
<row>
  <entry>32</entry>
  <entry>100000</entry>
  <entry>20</entry>
</row>
<row>
  <entry>64</entry>
  <entry>1000000</entry>
  <entry>40</entry>
</row>
<row>
  <entry>128</entry>
  <entry>10000000</entry>
  <entry>80</entry>
</row>
<row>
  <entry>256</entry>
  <entry>100000000</entry>
  <entry>100</entry>
</row>
</tbody>
</tgroup>
</table>
	<para>Ook grotere machten van twee worden gebruikt. Zo is de grootte van een sector op harde schijven (voorlopig) 512 bytes, is het aantal <command>tcp</command> en <command>udp</command> poorten gelijk aan 65.536, is het aantal kleuren dat een truecolor videokaart kan tonen 16777256, is de 640KB geheugen in oude computers niet toevallig 512KB + 128KB en is een kilobyte (of kibibyte) exact 1024 bytes. De maximum grootte van variabelen in programmeertalen is ook een macht van twee (65536 of 4294967296), schermen hebben wel eens een 1024x786 of 1280x1024 resolutie (768 = 512 + 256, 1280 = 1024 + 256) en Microsoft Excel kan maximum 65536 of 1048576 kolommen bevatten.</para>
<table frame='all'><title>grote machten van twee</title>
<?dbfo table-width="50%" ?>
<tgroup cols='2' align='left' colsep='1' rowsep='1'>
<colspec colname='c1' colwidth="1*" align="center"/>
<colspec colname='c2' colwidth="1*" align="center"/>
<thead>
<row>
  <entry>decimaal</entry>
  <entry>hexadecimaal</entry>
</row>
</thead>
<tbody>
<row>
  <entry>256</entry>
  <entry>100</entry>
</row>
<row>
  <entry>512</entry>
  <entry>200</entry>
</row>
<row>
  <entry>1024</entry>
  <entry>400</entry>
</row>
<row>
  <entry>2048</entry>
  <entry>800</entry>
</row>
<row>
  <entry>4096</entry>
  <entry>1000</entry>
</row>
<row>
  <entry>65536</entry>
  <entry>10000</entry>
</row>
<row>
  <entry>16777216</entry>
  <entry>1000000</entry>
</row>
<row>
  <entry>4294967296</entry>
  <entry>100000000</entry>
</row>
</tbody>
</tgroup>
</table>
</section>
