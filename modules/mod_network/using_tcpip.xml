<section><title>Using TCP/IP</title>
	<section><title>to GUI or not to GUI</title>
		<para>If you can, setup your tcp/ip configuration at install time, otherwise use the graphical tool from your distribution. In the case of RHEL, this is the <command>Network Administration Tool</command>, Novell and OpenSUSE users can use YaST. Avoid mixed use of the GUI tool with command line or direct editing of network configuration files. You should choose only one method to manage these files, because many GUI tools will override your manually edited settings. Also, on Red Hat Servers avoid editing the files in <command>/etc/sysconfig/networking</command><indexterm><primary>/etc/sysconfig/networking</primary></indexterm> manually!</para>
		<para>Now that we settled this, let's take a look at the files and script that configure your network.</para>
	</section>
	<section><title>/sbin/ifconfig</title>
		<para>You can use the <command>ifconfig</command><indexterm><primary>ifconfig(1)</primary></indexterm> command to see the tcp/ip configuration of a network interface. The first ethernet network card on linux is eth0.</para>
		<screen>
[root@RHEL4b ~]# ifconfig eth0
eth0      Link encap:Ethernet  HWaddr 00:0C:29:3B:15:80  
          inet addr:192.168.1.191  Bcast:192.168.1.255  Mask:255.255.255.0
          inet6 addr: fe80::20c:29ff:fe3b:1580/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:84 errors:0 dropped:0 overruns:0 frame:0
          TX packets:80 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:9216 (9.0 KiB)  TX bytes:8895 (8.6 KiB)
          Interrupt:185 Base address:0x1400 

[root@RHEL4b ~]#
		</screen>
		<para>You can also disable a network interface with <command>ifconfig eth0 down</command>, or enable it with <command>ifconfig eth0 up</command>.</para>
		<para>Every user has access to /sbin/ifconfig, providing the path is set. Normal users cannot use it to disable or enable interfaces, or set the ip address.</para>
		<screen>
[root@RHEL4b ~]# ifconfig eth0 192.168.1.199
[root@RHEL4b ~]#
		</screen>
		<para>The ip address change will be valid until the next change, or until reboot. You can also supply the <command>subnet mask</command><indexterm><primary>subnet mask</primary></indexterm> with ifconfig.</para>
		<screen>
root@laika:~# ifconfig eth0 192.168.1.40 netmask 255.255.255.0
root@laika:~#
		</screen>
		<para>Careful, if you try this via an ssh connection, then you might lose your ssh connection.</para>
	</section>
	
	<section><title>/etc/init.d/network(ing)</title>
		<para>If you have a problem with network interfaces, you can try to restart the network init script, as shown here on Ubuntu 7.04. The script stops and starts the interfaces, and renews an ip configuration with the DHCP server.</para>
		<screen>
root@laika:~# /etc/init.d/networking restart
 * Reconfiguring network interfaces...
There is already a pid file /var/run/dhclient.eth0.pid with pid 14570
killed old client process, removed PID file
Internet Systems Consortium DHCP Client V3.0.4
Copyright 2004-2006 Internet Systems Consortium.
All rights reserved.
For info, please visit http://www.isc.org/sw/dhcp/

Listening on LPF/eth0/00:90:f5:4e:ae:17
Sending on   LPF/eth0/00:90:f5:4e:ae:17
Sending on   Socket/fallback
DHCPRELEASE on eth0 to 192.168.1.1 port 67
There is already a pid file /var/run/dhclient.eth0.pid with pid 134993416
Internet Systems Consortium DHCP Client V3.0.4
Copyright 2004-2006 Internet Systems Consortium.
All rights reserved.
For info, please visit http://www.isc.org/sw/dhcp/

Listening on LPF/eth0/00:90:f5:4e:ae:17
Sending on   LPF/eth0/00:90:f5:4e:ae:17
Sending on   Socket/fallback
DHCPDISCOVER on eth0 to 255.255.255.255 port 67 interval 5
DHCPOFFER from 192.168.1.1
DHCPREQUEST on eth0 to 255.255.255.255 port 67
DHCPACK from 192.168.1.1
bound to 192.168.1.40 -- renewal in 249143 seconds.
root@laika:~# 
		</screen>
	</section>	
	<section><title>/etc/sysconfig</title>
		<para>Red Hat derived Linux systems store their network configuration files in the <command>/etc/sysconfig/</command><indexterm><primary>/etc/sysconfig/</primary></indexterm> directory. Debian derived systems do not have this directory.</para>
		<section><title>/etc/sysconfig/network</title>
			<para>Routing and host information for all network interfaces is specified in the <command>/etc/sysconfig/network</command><indexterm><primary>/etc/sysconfig/network</primary></indexterm> file. Below an example, setting 192.168.1.1 as the router (default gateway), and leaving the default hostname of localhost.localdomain. Common options not shown in this screenshot are <command>GATEWAYDEV</command> to set one of your network cards as the gateway device, and <command>NISDOMAIN</command> to specify the NIS domain name. </para>
			<screen>
paul@RHELv4u2:~$ cat /etc/sysconfig/network
NETWORKING=yes
HOSTNAME=localhost.localdomain
GATEWAY=192.168.1.1
			</screen>
			<para>The same file, but here the hostname of the machine is not set to the default as above.</para>
			<screen>
[paul@RHEL4b ~]$ cat /etc/sysconfig/network
NETWORKING=yes
HOSTNAME=RHEL4b
[paul@RHEL4b ~]$ 
			</screen>
		</section>
		<section><title>/etc/sysconfig/network-scripts</title>
			<para>For every network card in your computer, you should have an interface configuration file named <command>/etc/sysconfig/network-scripts/ifcfg-$IFNAME</command><indexterm><primary>/etc/sysconfig/network-scripts</primary></indexterm>. Be careful when editing these files, your edits will work, until you start the <command>system-config-network</command><indexterm><primary>system-config-network</primary></indexterm> (might soon be renamed to redhat-config-network) tool. This tool can and will overwrite your manual edits.</para>
			<para>The first ethernet NIC will get <command>ifcfg-eth0</command><indexterm><primary>ifcfg-eth0</primary></indexterm>, the next one ifcfg-eth1 and so on. Below is an example.</para>
			<screen>
paul@RHELv4u2:~$ cat /etc/sysconfig/network-scripts/ifcfg-eth0 
DEVICE=eth0
BOOTPROTO=static
BROADCAST=192.168.1.255
HWADDR=00:0C:29:5A:86:D7
IPADDR=192.168.1.222
NETMASK=255.255.255.0
NETWORK=192.168.1.0
ONBOOT=yes
TYPE=Ethernet
			</screen>
			<para>When the second nic is configured for dhcp, then this is the ifcfg-eth1. </para>
			<screen>
paul@RHELv4u2:~$ cat /etc/sysconfig/network-scripts/ifcfg-eth1
DEVICE=eth1
BOOTPROTO=dhcp
HWADDR=00:0C:29:6A:34:D8
ONBOOT=yes
TYPE=Ethernet
			</screen>
			<para>Besides <command>dhcp</command><indexterm><primary>dhcp</primary></indexterm> and <command>bootp</command><indexterm><primary>bootp</primary></indexterm> the BOOTPROTO variable can be <command>static</command> or <command>none</command>, both meaning there should be no protocol used at boottime to set the interface values. The BROADCAST variable is no longer needed, it will be calculated.</para>
			<para>The HWADDR can be used to make sure that the nic's get the correct name when multiple nic's are present in the computer. It can not be used to set the MAC address of a nic. For this, you need to specify the MACADDR variable. Do not use HWADDR and MACADDR in the same ifcfg file.</para>
		</section>
	</section>
	<section><title>/sbin/ifup and /sbin/ifdown</title>
		<para>The <command>ifup</command><indexterm><primary>ifup(1)</primary></indexterm> and <command>ifdown</command><indexterm><primary>ifdown(1)</primary></indexterm> commands take an interface as argument and bring it up or down. The screenshot below deactivates the eth0 network interface.</para>
		<screen>
root@laika:~# ifdown eth0
There is already a pid file /var/run/dhclient.eth0.pid with pid 14925
killed old client process, removed PID file
Internet Systems Consortium DHCP Client V3.0.4
Copyright 2004-2006 Internet Systems Consortium.
All rights reserved.
For info, please visit http://www.isc.org/sw/dhcp/

Listening on LPF/eth0/00:90:f5:4e:ae:17
Sending on   LPF/eth0/00:90:f5:4e:ae:17
Sending on   Socket/fallback
DHCPRELEASE on eth0 to 192.168.1.1 port 67
		</screen>
		<para>On debian derived systems, these commands will look at <command>/etc/network/interfaces</command><indexterm><primary>/etc/network/interfaces</primary></indexterm>, whereas on Red Hat derived systems they will look at /etc/sysconfig/network-scripts/ifcfg- files. In the screenshot below ifup is used to bring up the eth0 interface. Because the /etc/network/interfaces file says eth0 uses DHCP, the ifup tool will (try to) start the dhclient daemon.</para>
		<screen>
root@laika:~# ifup eth0
There is already a pid file /var/run/dhclient.eth0.pid with pid 134993416
Internet Systems Consortium DHCP Client V3.0.4
Copyright 2004-2006 Internet Systems Consortium.
All rights reserved.
For info, please visit http://www.isc.org/sw/dhcp/

Listening on LPF/eth0/00:90:f5:4e:ae:17
Sending on   LPF/eth0/00:90:f5:4e:ae:17
Sending on   Socket/fallback
DHCPDISCOVER on eth0 to 255.255.255.255 port 67 interval 8
DHCPOFFER from 192.168.1.1
DHCPREQUEST on eth0 to 255.255.255.255 port 67
DHCPACK from 192.168.1.1
bound to 192.168.1.40 -- renewal in 231552 seconds.
root@laika:~#
		</screen>
	</section>
	<section><title>/sbin/dhclient</title>
		<para>Home and client Linux desktops often have <command>dhclient</command><indexterm><primary>dhclient(1)</primary></indexterm> running. This is a daemon that enables a network interface to lease an ip configuration from a DHCP server. When your adapter is configured for DHCP or BOOTP, then /sbin/ifup will start the dhclient daemon.</para>
	</section>
	<section><title>/sbin/route</title>
		<para>You can see the computer's local routing table with the <command>route</command><indexterm><primary>route(1)</primary></indexterm> command (and also with <command>netstat -r</command><indexterm><primary>netstat(1)</primary></indexterm> ).</para>
		<screen>
root@RHEL4b ~]# netstat -r
Kernel IP routing table
Destination     Gateway   Genmask         Flags   MSS Window  irtt Iface
192.168.1.0     *         255.255.255.0   U         0 0          0 eth0
[root@RHEL4b ~]# route
Kernel IP routing table
Destination     Gateway   Genmask         Flags Metric Ref    Use Iface
192.168.1.0     *         255.255.255.0   U     0      0        0 eth0
[root@RHEL4b ~]# 
		</screen>
		<para>It appears this computer does not have a <command>gateway</command><indexterm><primary>gateway</primary></indexterm> configured, so we use <command>route add default gw</command><indexterm><primary>route(1)</primary></indexterm> to add a <command>default gateway</command><indexterm><primary>default gateway</primary></indexterm>.</para>
		<screen>
[root@RHEL4b ~]# route add default gw 192.168.1.1
[root@RHEL4b ~]# route
Kernel IP routing table
Destination     Gateway      Genmask        Flags Metric Ref  Use Iface
192.168.1.0     *            255.255.255.0  U     0      0      0 eth0
default         192.168.1.1  0.0.0.0        UG    0      0      0 eth0
[root@RHEL4b ~]# 
		</screen>
	</section>
	<section><title>arp</title>
		<para>Mac to IP resolution is handled by the <command>arp</command><indexterm><primary>arp(1)</primary></indexterm> protocol. The arp table can be displayed with the arp tool.</para>
		<screen>
root@barry:~# arp -a
? (192.168.1.191) at 00:0C:29:3B:15:80 [ether] on eth1
agapi (192.168.1.73) at 00:03:BA:09:7F:D2 [ether] on eth1
anya (192.168.1.1) at 00:12:01:E2:87:FB [ether] on eth1
faith (192.168.1.41) at 00:0E:7F:41:0D:EB [ether] on eth1
kiss (192.168.1.49) at 00:D0:E0:91:79:95 [ether] on eth1
laika (192.168.1.40) at 00:90:F5:4E:AE:17 [ether] on eth1
pasha (192.168.1.71) at 00:03:BA:02:C3:82 [ether] on eth1
shaka (192.168.1.72) at 00:03:BA:09:7C:F9 [ether] on eth1
root@barry:~# 	
		</screen>
		<para><emphasis>Anya is a Cisco Firewall, Faith is an HP Color printer, Kiss is a Kiss DP600, laika is a Clevo laptop and Agapi, Shaka and Pasha are SPARC servers. The question mark is a Red Hat Enterprise Linux server running in vmware.</emphasis></para>
	</section>
	<section><title>ping</title>
		<para>If you can ping to another host, then ip is configured.</para>
		<screen>
[root@RHEL4b ~]# ping 192.168.1.5
PING 192.168.1.5 (192.168.1.5) 56(84) bytes of data.
64 bytes from 192.168.1.5: icmp_seq=0 ttl=64 time=1004 ms
64 bytes from 192.168.1.5: icmp_seq=1 ttl=64 time=1.19 ms
64 bytes from 192.168.1.5: icmp_seq=2 ttl=64 time=0.494 ms
64 bytes from 192.168.1.5: icmp_seq=3 ttl=64 time=0.419 ms

--- 192.168.1.5 ping statistics ---
4 packets transmitted, 4 received, 0% packet loss, time 3009ms
rtt min/avg/max/mdev = 0.419/251.574/1004.186/434.520 ms, pipe 2
[root@RHEL4b ~]#		</screen>
	</section>
	<section><title>Red Hat network settings backup</title>
		<para>It is always a good idea to have a backup of current network settings. The <command>system-config-network-cmd</command><indexterm><primary>system-config-network-cmd</primary></indexterm> can do this for you.</para>
		<screen>
root ~# system-config-network-cmd -e > NetworkSettings20070208.txt
		</screen>
		<para>And system-config-network-cmd can also be used to restore these settings.</para>
		<screen>
root ~# system-config-network-cmd -i -c &#060; NetworkSettings20070208.txt
		</screen>
		<para>For other Linux Systems, take a backup of the relevant portions in /etc.</para>
	</section>
	<section><title>Restarting the network</title>
	<para>To stop, start or restart all network interfaces and services, use <command>service network stop|start|restart</command><indexterm><primary>service(1)</primary></indexterm>. <emphasis>Do not stop the network when connected through ssh.</emphasis></para>
	</section>
	<section><title>ethtool</title>
		<para>To display or change network card settings, use <command>ethtool</command><indexterm><primary>ethtool(1)</primary></indexterm>. The results depend on the capabilities of your network card. The example shows a network that auto-negotiates it's bandwidth.</para>
		<screen>
root@laika:~# ethtool eth0
Settings for eth0:
	Supported ports: [ TP ]
	Supported link modes:   10baseT/Half 10baseT/Full 
	                        100baseT/Half 100baseT/Full 
	                        1000baseT/Full 
	Supports auto-negotiation: Yes
	Advertised link modes:  10baseT/Half 10baseT/Full 
	                        100baseT/Half 100baseT/Full 
	                        1000baseT/Full 
	Advertised auto-negotiation: Yes
	Speed: 1000Mb/s
	Duplex: Full
	Port: Twisted Pair
	PHYAD: 0
	Transceiver: internal
	Auto-negotiation: on
	Supports Wake-on: pumbg
	Wake-on: g
	Current message level: 0x00000033 (51)
	Link detected: yes
		</screen>
		<para>This example shows how to use ethtool to switch the bandwidth from 1000Mbit to 100Mbit and back. Note that some time passes before the nic is back to 1000Mbit.</para>
		<screen>
root@laika:~# ethtool eth0 | grep Speed
	Speed: 1000Mb/s
root@laika:~# ethtool -s eth0 speed 100
root@laika:~# ethtool eth0 | grep Speed
	Speed: 100Mb/s
root@laika:~# ethtool -s eth0 speed 1000
root@laika:~# ethtool eth0 | grep Speed
	Speed: 1000Mb/s
		</screen>
	</section>
	<section><title>Practice IP Configuration</title>
		<para>1. Use ifconfig to list all your network interfaces and their ip-addresses. Write down your ip-address and subnet mask.</para>
		<para>2. Use the GUI tool of your distro to set a fix ip address (use the same address as the one you got from dhcp). Verify with ifconfig and ping to a neighbour that it works. Also look at the configuration files in /etc/network or /etc/sysconfig to see how the GUI tool sets a fixed address.</para>
		<para>3. Use the GUI tool to enable dhcp again (and verify the changes in the config files).</para>
		<para>4. Use ifdown or ifconfig to disable your eth0 network card.</para>
		<para>5. Restart networking to enable your network card again.</para>
		<para>6. Is the dhclient daemon running ?</para>
		<para>7. Verify that you have a default gateway.</para>	
		<para>8. Ping the default gateway, then look at the MAC address of the default gateway.</para>	
	</section>
</section>

