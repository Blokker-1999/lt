<section><title>shell history</title>
	<section><title>history variables</title>
		<para>The <command>bash</command> shell will remember the commands you type, so you can easily repeat previous commands. Some variables are defining this process: <command>$HISTFILE</command><indexterm><primary>$HISTFILE</primary></indexterm> points to the location of the history file, <command>$HISTSIZE</command><indexterm><primary>$HISTSIZE</primary></indexterm> will tell you how many commands will be remembered in your current shell session, <command>$HISTFILESIZE</command><indexterm><primary>$HISTFILESIZE</primary></indexterm> is the truncate limit for the number of commands in the history file. Your shell session history is written to the file when exiting the shell. This screenshot lists some history variables in bash.</para>
		<screen>
[paul@RHELv4u3 ~]$ echo $HISTFILE
/home/paul/.bash_history
[paul@RHELv4u3 ~]$ echo $HISTFILESIZE
1000
[paul@RHELv4u3 ~]$ echo $HISTSIZE
1000
[paul@RHELv4u3 ~]$ 
		</screen>
		<para>The $HISTFILE (defaults to .sh_history in the home directory) and $HISTSIZE variables are also used by the Korn shell (ksh).</para>
		<screen>
$ set | grep -i hist
HISTSIZE=5000
		</screen>
	</section>
	<section><title>repeating commands in bash</title>
		<para>To repeat the last command in bash, type <command>!!</command><indexterm><primary>!!</primary></indexterm>. This is pronounced as <command>bang bang</command>. To repeat older commands, use <command>history</command><indexterm><primary>history</primary></indexterm> to display your history and type <command>!</command><indexterm><primary>!</primary></indexterm> followed by a number. The shell will echo the command and execute it.</para>
		<screen>
[paul@RHELv4u3 ~]$ history
2  cat /etc/redhat-release 
3  uname -r
4  rpm -qa | grep ^parted
...
[paul@RHELv4u3 ~]$ !3
uname -r
2.6.9-34.EL
[paul@RHELv4u3 ~]$ 
		</screen>
		<para>You can also use bang followed by one or more characters, <command>bash</command> will then repeat the last command that started with those characters. But this can be very very dangerous, you have to be sure about the last command in your current shell history that starts with those characters!</para>
		<screen>
[paul@RHEL4b ~]$ ls file4
file4
[paul@RHEL4b ~]$ !ls
ls file4
file4
		</screen>
		<para> You can also use a colon followed by a regular expression to manipulate the previous command.</para>
		<screen>
[paul@RHEL4b ~]$ !ls:s/4/5
ls file5
file5
		</screen>
		<para>The history command can also receive the count of history lines required.</para>
		<screen>
[paul@RHEL4b ~]$ history 4
  422  ls file4
  423  ls file4
  424  ls file5
  425  history 4
[paul@RHEL4b ~]$ 
		</screen>
	</section>
	<section><title>repeating commands in ksh</title>
		<para>Repeating a command in the Korn shell is very similar. The Korn shell also knows the <command>history</command> command, but uses the letter <command>r</command> to recall lines from history.</para>
		<para>This screenshot shows the history command. Note the different meaning of the parameter.</para>
		<screen>
$ history 17
17      clear
18      echo hoi
19      history 12
20      echo world
21      history 17
		</screen>
		<para>Repeating with r can be combined with the line numbers given by the history command, or with the first few letters of the command.</para>
		<screen>
$ r e
echo world
world
$ cd /etc
$ r
cd /etc
$ 

		</screen>
	</section>	
</section>	
