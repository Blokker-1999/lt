<?hard-pagebreak?>
<section><title>router tussen twee netwerken</title>
	<para>Een <command>router</command> verbindt twee netwerken.</para>
 	<mediaobject><imageobject><imagedata fileref="images/simple_router_lan.png" format="EPS" align="center"></imagedata></imageobject></mediaobject>
	<para>Om iets te laten zien over <command>routers</command> heb je dus een <command>router</command> nodig en minstens twee computers, eentje aan elke kant van de <command>router</command>. Hier volgen twee voorbeelden, gedaan met vrije software in <command>Virtualbox</command>.</para>
	<section><title>de opstelling</title>
		<para>We beginnen met twee netwerken te bouwen, eentje links in de range <command>10.0.33.0/24</command> en eentje rechts in de range <command>10.0.42.0/24</command>. Het linkse netwerk wordt <command>leftnet</command> genoemd, het andere <command>rightnet</command>.</para>
 		<mediaobject><imageobject><imagedata fileref="images/leftnet_rightnet_router.png" format="EPS" align="center"></imagedata></imageobject></mediaobject>
		<para>In het linkse netwerk zetten we een Red Hat Enterprise Linux (rhel53) server met ip-adres 10.0.33.2/24. Linux noemt de lokale netwerkkaart <command>eth0</command>. Het volgende commando configureert het juiste ip-adres en subnet mask:</para>
		<screen>ifconfig eth0 10.0.33.2 netmask 255.255.255.0</screen>
		<para>Het mac-adres (of hardware address) van deze netwerkkaart is 08:00:27:F6:67:53.</para>
		<para>In het rechtse netwerk zetten we een Oracle Solaris 11 (sol11) server met ip-adres 10.0.42.2/24. Solaris noemt de lokale netwerkkaart <command>e1000g0</command>. Het volgende commando configureert het juiste ip-adres en subnet mask:</para>
		<screen>ifconfig e1000g0 10.0.42.2 netmask 255.255.255.0</screen>
		<para>Het mac-adres (of ethernet address) van deze netwerkkaart is 8:0:27:5a:16:76.</para>
		<para>Tussen de twee netwerken staat een Fedora 13 (fed13) server die dienst doet als router. Deze router heeft twee netwerkkaarten, eentje verbonden met <command>leftnet</command> en eentje verbonden met <command>rightnet</command>. Het commando om beide netwerkkaarten te configureren is:</para>
		<screen>ifconfig eth0 10.0.33.1 netmask 255.255.255.0
ifconfig eth1 10.0.42.1 netmask 255.255.255.0</screen>
		<para>Het mac-adres van <command>eth0</command> is hier 08:00:27:CE:93:98 en van <command>eth1</command> is het 08:00:27:E8:BE:68.</para>
		<screen>
 ___________               ____________________                ____________
|           |             |       router       |              |            |
| rhel53  nic - leftnet - nic    fedora13    nic - rightnet - nic  sol11   |
|  10.0.33.2|             |10.0.33.1  10.0.42.1|              |10.0.42.2   |
|___________|             |____________________|              |____________|
</screen>
	</section>
	<section><title>ping op leftnet</title>
		<para>We controleren even dat <command>wireshark</command> goed werkt door een <command>ping</command> te doen van de <command>rhel53</command> naar 10.0.33.1. We testen hiermee dat de verbinding tussen de links rhel53 computer en de fedora13 router werkt. Dit is noodzakelijk opdat de computer de router kan gebruiken. Een router moet in hetzelfde netwerk staan als de computer.</para>
	<mediaobject><imageobject><imagedata fileref="images/cvo_router_ping1.jpg" format="EPS" align="center"></imagedata></imageobject></mediaobject>
		<para>Dit is een lokaal netwerk dus we zien twee gekende <command>arp</command> packetjes. De ping wordt met de correcte mac-adressen op het netwerk gezet.</para>
	</section>
	<section><title>standaard gateway instellen</title>
		<para>We configureren nu de computers uit <command>leftnet</command> en <command>rightnet</command> om elk de <command>router</command> te gebruiken. Elke computer ziet een andere kant van de router.</para>
		<para>Op <command>sol11</command> geven we 10.0.42.1 op als adres van de router:</para>
		<screen>route add default 10.0.42.1</screen>
		<para>Op <command>rhel53</command> geven we 10.0.33.1 op als adres van de router:</para>
		<screen>route add default gw 10.0.33.1</screen>
		<para>Tussen haakjes, op <command>MS Windows</command> kan je dit door via Start - Instellingen - Controle Paneel - Netwerkbeheer - Eigenschappen - tcp/ip - Eigenschappen ergens de <command>standaard gateway</command> in te vullen en de laatste twee geopende vensters te sluiten.</para>
	</section>
	<section><title>ping over de router?</title>
		<para>Als we echter een ping proberen van het ene naar het andere netwerk, dan krijgen we geen antwoord want de netwerken zijn gescheiden en de router staat nog niet aan.</para>
	<mediaobject><imageobject><imagedata fileref="images/cvo_router_off.jpg" format="EPS" align="center"></imagedata></imageobject></mediaobject>
		<para>Het is niet omdat een computer twee netwerkkaarten heeft, dat die automatisch router gaat spelen.</para>
	</section>
	<section><title>routerfunctie aanzetten</title>
		<para>We zetten de router aan door 1 bit aan te passen in Linux, die zal dan automatisch alle packetjes routen over al zijn netwerkkaarten. Dit is handig als je over slechts één router beschikt die al je netwerken verbindt. We zullen later zien dat er meer werk is om twee routers te laten samenwerken.</para>
	</section>
	<section><title>ping over de router!</title>
		<para>Het packetje dat vertrekt bij 10.0.42.2 komt eerst (via <command>rightnet</command>) aan bij 10.0.42.1. Dat zie je in de screenshot van <command>wireshark</command> hieronder.</para>
	<mediaobject><imageobject><imagedata fileref="images/cvo_router_ok.jpg" format="EPS" align="center"></imagedata></imageobject></mediaobject>
		<para>Vervolgens gaat de router het destination-mac-adres aanpassen naar het mac-adres van 10.0.33.2, en terzelfdertijd het source-mac-adres vervangen door dat van zijn eigen 10.0.33.1 interface. Zo komt het packetje (via <command>leftnet</command>) aan bij de bestemming.</para>
		<para>We hebben nu een werkende router tussen onze twee netwerken.</para>
	</section>
</section>
<?hard-pagebreak?>
<section><title>twee routers met elkaar verbinden</title>
	<section><title>opstelling met vier machines</title>
 		<mediaobject><imageobject><imagedata fileref="images/leftnet_middlenet_rightnet_router.png" format="EPS" align="center"></imagedata></imageobject></mediaobject>
		<para>We voegen een <command>Debian 5.04</command> server als router toe aan onze opstelling en verbinden beide routers via <command>middlenet</command> (en de nieuwe reeks 10.0.12.0/24). Er staan nu twee routers tussen de 10.0.42.0/24 en 10.0.33.0/24 netwerken.</para>
		<screen>
        ____________________                 _____________________    r
l n    |       router       |               |       router        |   i n
e e -  nic     deb504     nic - middlenet - nic    fedora13     nic - g e
f t    |10.0.33.1  10.0.12.1|               |10.0.12.100 10.0.42.1|   h t
t      |____________________|               |_____________________|   t

</screen>
		<para>De configuratie van de twee gewone computers moet niet aangepast worden, zij behouden (wat ip-adres betreft) dezelfde <command>default gateway</command>.</para>
	</section>
	<section><title>rip</title>
		<para>Het <command>routing interface protocol</command> laat toe dat routers hun eigen <command>routing table</command> opsturen naar nabije routers.</para>
		<para>Hieronder kan je zien hoe de fedore13 router via 10.0.12.100 aan de andere router vertelt dat hij direct (met een metric van 1) verbonden is met het 10.0.42.0/24 netwerk.</para>
	<mediaobject><imageobject><imagedata fileref="images/wireshark_rip.png" format="EPS" align="center"></imagedata></imageobject></mediaobject>
		<para>De <command>metric</command> in de <command>routing table</command> kan je zien als een <command>kost</command>. Een router zal steeds proberen om packetjes te leveren via de goedkoopste route.</para>
	</section>
</section>
<section><title>lokale routing tables</title>
	<para>Elke computer met een ip-adres heeft intern een <command>routing table</command>. Op Windows kan je deze zien met <command>route print</command>, op Unix met <command>netstat</command>.</para>
	<para>Onderstaande tabel is simpel omdat er maar 1 netwerkkaart in de computer een ip-adres heeft. Alle trafiek voor dat netwerk, gaat via die netwerkkaart (genaamd eth2). Alle andere trafiek wordt via die netwerkkaart naar de router (192.168.1.1) gestuurd.</para>
	<screen>[root@fed13 ~]# netstat -nr
Kernel IP routing table
Destination   Gateway       Genmask         Flags   MSS Window  irtt Iface
192.168.1.0   0.0.0.0       255.255.255.0   U         0 0          0 eth2
0.0.0.0       192.168.1.1   0.0.0.0         UG        0 0          0 eth2
	</screen>
	<para>Onderstaande tabel is uitgebreider omdat deze computer nu drie netwerkkaarten heeft met elk een ip-adres in een ander netwerk. Trafiek dat niet voor een van deze netwerken is, wordt nog steeds naar 192.168.1.1 gestuurd via eth2.</para>
	<screen>[root@fed13 ~]# netstat -nr
Kernel IP routing table
Destination   Gateway       Genmask         Flags   MSS Window  irtt Iface
10.0.33.0     0.0.0.0       255.255.255.0   U         0 0          0 eth0
192.168.1.0   0.0.0.0       255.255.255.0   U         0 0          0 eth2
10.0.42.0     0.0.0.0       255.255.255.0   U         0 0          0 eth1
0.0.0.0       192.168.1.1   0.0.0.0         UG        0 0          0 eth2</screen>
</section>
<?hard-pagebreak?>
<section><title>nat</title>
	<para>We hebben op het bord getekend hoe <command>nat</command> samenwerkt met <command>pat</command> om private adressen om te zetten in publieke, en omgekeerd.</para>
	<para>Hieronder een tekening van een packetje in een netwerk zonder router.</para>
	<para></para>
	<para></para>
	<mediaobject><imageobject><imagedata fileref="images/mac_ip_packetje.png" format="EPS" align="center"></imagedata></imageobject></mediaobject>
	<para>Hieronder een tekening van een packetje dat door een eenvoudige router gaat. Zoals je ziet, worden de mac-adressen aangepast.</para>
	<para></para>
	<para></para>
	<mediaobject><imageobject><imagedata fileref="images/mac_ip_packetje_met_router.png" format="EPS" align="center"></imagedata></imageobject></mediaobject>
</section>
<?hard-pagebreak?>
<section><title>dnat</title>
	<para>We spreken van <command>destination nat</command> wanneer de router het <command>bestemmings</command>-ip-adres vertaalt naar een ander ip-adres.</para>
	<para>We beginnen met een simpel voorbeeld intern in een organisatie. Dit is een tekening van een packetje dat door een <command>dnat router</command> gaat. Zoals je ziet, wordt naast de mac-adressen, nu ook het <command>bestemmings</command>-ip-adres aangepast. De 'mb' laptop ziet dus het ip-adres van de 'router' als bestemming, terwijl de 'www' server achter de router staat.</para>
	<para></para>
	<mediaobject><imageobject><imagedata fileref="images/mac_ip_packetje_met_dnat.png" format="EPS" align="center"></imagedata></imageobject></mediaobject>
	<para>Hieronder hetzelfde voorbeeld, hetzelfde scenario, maar met ip-adressen ingevuld. Het <command>bestemmings</command>-ip-adres staat vet gedrukt omdat dit de kern is van een <command>dnat</command> router.</para>
	<para></para>
	<mediaobject><imageobject><imagedata fileref="images/dnat_ip.png" format="EPS" align="center"></imagedata></imageobject></mediaobject>
</section>
<?hard-pagebreak?>
<section><title>dnat en internet</title>
	<para><command>dnat</command> wordt meestal gebruikt om een publiek adres te vertalen naar een intern en privaat adres. Het is uiteraard goed mogelijk dat een server met een publiek ip-adres rechtstreeks met internet verbonden is, maar het is ook mogelijk om dit publieke adres toe te kennen aan een <command>dnat router</command> (die eventueel ook firewall is) en de eigenlijke server in een private ip-range te zetten.</para>
	<para>Deze tekening toont dat op het hele internet het publieke adres bekend is, terwijl eens achter de <command>dnat router</command> een privaat adres wordt gebruikt.</para>
	<para></para>
	<mediaobject><imageobject><imagedata fileref="images/dnat_internet.png" format="EPS" align="center"></imagedata></imageobject></mediaobject>
</section>
<section><title>port forwarding en pat</title>
	<para>We hebben beide in de klas besproken.</para>
</section>
<?hard-pagebreak?>
<section><title>snat</title>
	<para>We spreken van <command>source nat</command> wanneer de router het <command>bron</command>-ip-adres aanpast.</para>
	<para>Hieronder een tekening van een packetje dat door een <command>snat router</command> gaat. Zoals je ziet, wordt behalve de mac-adressen, nu ook het <command>bron</command>-ip-adres aangepast. De 'www' server ziet dus het ip-adres van de 'router' als bron.</para>
	<para></para>
	<mediaobject><imageobject><imagedata fileref="images/mac_ip_packetje_met_snat.png" format="EPS" align="center"></imagedata></imageobject></mediaobject>
</section>
<section><title>snat en internet</title>
	<para><command>snat</command> wordt meestal gebruikt om onze interne private adressen om te zetten in een publiek adres dat op internet gezien wordt. Onze private adressen worden verborgen voor het internet.</para>
	<para></para>
	<mediaobject><imageobject><imagedata fileref="images/snat_internet.png" format="EPS" align="center"></imagedata></imageobject></mediaobject>
	<para>We spreken van <command>masquerading</command> wanneer <command>snat</command> wordt toegepast op een dynamisch publiek ip-adres. Dit is het geval bij de meeste <command>adsl</command> verbindingen in Vlaanderen.</para>
</section>
