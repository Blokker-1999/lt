<?hard-pagebreak?>
<section><title>Practice: caching only DNS server</title>
	<para>1a. installing DNS software on Debian/Ubuntu</para>
	<screen>root@ubu1010srv:~# dpkg -l | grep bind9
ii   bind9-host    1:9.7.1.dfsg.P2-2ubuntu0.2   Version of 'host' bun\
dled with BIND 9.X
ii   libbind9-60   1:9.7.1.dfsg.P2-2ubuntu0.2   BIND9 Shared Library \
used by BIND
root@ubu1010srv:~# aptitude install bind9
The following NEW packages will be installed:
  bind9 bind9utils{a} 
0 packages upgraded, 2 newly installed, 0 to remove and 0 not upgraded.
Need to get 433kB of archives. After unpacking 1,352kB will be used.
Do you want to continue? [Y/n/?] 

... output truncated ...

 * Starting domain name service... bind9                        [ OK ]
                                         
root@ubu1010srv:~# dpkg -l | grep bind9
ii bind9       1:9.7.1.dfsg.P2-2ubuntu0.2 Internet Domain Name Server
ii bind9-host  1:9.7.1.dfsg.P2-2ubuntu0.2 Version of 'host' bundled w\
ith BIND 9.X
ii bind9utils  1:9.7.1.dfsg.P2-2ubuntu0.2 Utilities for BIND
ii libbind9-60 1:9.7.1.dfsg.P2-2ubuntu0.2 BIND9 Shared Library used b\
y BIND
root@ubu1010srv:~# 
</screen>
	<para>1b. installing DNS software on RHEL/Fedora</para>
	<screen>[root@fedora14 ~]# rpm -qa | grep bind
samba-winbind-clients-3.5.8-74.fc14.i686
bind-utils-9.7.3-1.fc14.i686
PackageKit-device-rebind-0.6.12-2.fc14.i686
bind-libs-9.7.3-1.fc14.i686
[root@fedora14 ~]# yum install bind
Loaded plugins: langpacks, presto, refresh-packagekit
Adding en_US to language list
Setting up Install Process
Resolving Dependencies
--> Running transaction check
---> Package bind.i686 32:9.7.3-1.fc14 set to be installed
--> Finished Dependency Resolution

...output truncated

Running Transaction
  Installing     : 32:bind-9.7.3-1.fc14.i686                   1/1

Installed:
  bind.i686 32:9.7.3-1.fc14

Complete!
[root@fedora14 ~]# rpm -qa | grep bind
samba-winbind-clients-3.5.8-74.fc14.i686
bind-utils-9.7.3-1.fc14.i686
PackageKit-device-rebind-0.6.12-2.fc14.i686
bind-libs-9.7.3-1.fc14.i686
bind-9.7.3-1.fc14.i686
[root@fedora14 ~]# </screen>
	<para>2. Discover the default configuration files. Can you define the purpose of each file ?</para>
	<screen></screen>
	<para>2a. On Fedora:</para>
	<screen>[root@fedora14 ~]# ls -ld /etc/named*
drwxr-x---. 2 root named 4096 Feb 18 16:07 /etc/named
-rw-r-----. 1 root named 1008 Jul 19  2010 /etc/named.conf
-rw-r--r--. 1 root named 2544 Feb 18 16:07 /etc/named.iscdlv.key
-rw-r-----. 1 root named  931 Jun 21  2007 /etc/named.rfc1912.zones
-rw-r--r--. 1 root named  487 Jul 19  2010 /etc/named.root.key
[root@fedora14 ~]# ls -l /var/named/
total 28
drwxrwx---. 2 named named 4096 Feb 18 16:07 data
drwxrwx---. 2 named named 4096 Feb 18 16:07 dynamic
-rw-r-----. 1 root  named 1892 Feb 18  2008 named.ca
-rw-r-----. 1 root  named  152 Dec 15  2009 named.empty
-rw-r-----. 1 root  named  152 Jun 21  2007 named.localhost
-rw-r-----. 1 root  named  168 Dec 15  2009 named.loopback
drwxrwx---. 2 named named 4096 Feb 18 16:07 slaves</screen>
	<para>2. On Ubuntu:</para>
	<screen>root@ubu1010srv:~# ls -l /etc/bind
total 52
-rw-r--r-- 1 root root  601 2011-02-23 16:22 bind.keys
-rw-r--r-- 1 root root  237 2011-02-23 16:22 db.0
-rw-r--r-- 1 root root  271 2011-02-23 16:22 db.127
-rw-r--r-- 1 root root  237 2011-02-23 16:22 db.255
-rw-r--r-- 1 root root  353 2011-02-23 16:22 db.empty
-rw-r--r-- 1 root root  270 2011-02-23 16:22 db.local
-rw-r--r-- 1 root root 2994 2011-02-23 16:22 db.root
-rw-r--r-- 1 root bind  463 2011-02-23 16:22 named.conf
-rw-r--r-- 1 root bind  490 2011-02-23 16:22 named.conf.default-zones
-rw-r--r-- 1 root bind  165 2011-02-23 16:22 named.conf.local
-rw-r--r-- 1 root bind  572 2011-02-23 16:22 named.conf.options
-rw-r----- 1 bind bind   77 2011-05-15 17:52 rndc.key
-rw-r--r-- 1 root root 1317 2011-02-23 16:22 zones.rfc1918</screen>
	<para>3. Setup caching only dns server. This is normally the default setup. A caching-only name server will look up names for you and cache them. Most tutorials will tell you to add a <command>forwarder</command>, so we first try without this!</para>
	<screen>root@ubu1010srv:/var/log# nslookup 
> server 192.168.1.37
Default server: 192.168.1.37
Address: 192.168.1.37#53
> 
> slashdot.org
Server:		192.168.1.37
Address:	192.168.1.37#53

Non-authoritative answer:
Name:	slashdot.org
Address: 216.34.181.45</screen>
	<para>Hey this seems to work without a forwarder. Using a sniffer you can find out what really happens (since the server is not using a cache, not using your dns-server (from /etc/resolv.conf). So where is this information coming from, and what can you learn from sniffing this dns traffic ?</para>
	<para>4. Explain in detail what happens when you enable a caching only dns server without forwarder. This wireshark screenshot can help, but you learn more by sniffing the traffic yourself! I will choose two volunteers to explain this in front of the class.</para>
	<mediaobject><imageobject><imagedata fileref="images/wireshark_org_server.jpg" format="EPS" align="center"></imagedata></imageobject></mediaobject>
</section>
<?hard-pagebreak?>
<section><title>Practice: caching only with forwarder</title>
	<para>5. Add a local dns-server as a forwarder (at my home this is 192.168.1.1, probably different ip in a classroom!).</para>
	<screen>
root@ubu1010srv:~# grep -A2 forwarder /etc/bind/named.conf.options| t\
ail -3
forwarders {
 	192.168.1.1;
 };
root@ubu1010srv:~# /etc/init.d/bind9 restart
 * Stopping domain name service... bind9                   [ OK ] 
 * Starting domain name service... bind9                   [ OK ] 
root@ubu1010srv:~# </screen>
	<para>6. Explain the purpose of adding the forwarder. What is our DNS server doing when it receives a query ? Again the wireshark screenshot can help, you should see something similar.</para>
	<screen>root@ubu1010srv:~# nslookup
> server
Default server: 192.168.1.4
Address: 192.168.1.4#53
> server 192.168.1.37
Default server: 192.168.1.37
Address: 192.168.1.37#53
> 
> cobbaut.be
Server:		192.168.1.37
Address:	192.168.1.37#53

Non-authoritative answer:
Name:	cobbaut.be
Address: 88.151.243.8</screen>
	<screen></screen>
	<screen></screen>
	<mediaobject><imageobject><imagedata fileref="images/dns_forwarder.jpg" format="EPS" align="center"></imagedata></imageobject></mediaobject>
	<para>7. What happens when you query for the same domain name more than once ?</para>
	<screen></screen>
	<screen></screen>
	<screen></screen>
	<para>8. Why does it say "non-authoritative answer" ? When is a dns server authoritative ?</para>
	<screen></screen>
	<screen></screen>
	<screen></screen>
	<para>9. You can also use <command>dig</command> instead of <command>nslookup</command>.</para>
	<screen>dig @192.168.1.37 linux-training.be</screen>
	<screen></screen>
	<para>10. How can we avoid having to set the server in dig or nslookup ?</para>
	<screen>root@ubu1010srv:~# cat /etc/resolv.conf 
nameserver 127.0.0.1</screen>
	<para>11. When you use <command>dig</command> for the first time for a domain, where is the answer coming from ? And the second time ? How can you tell ?</para>
</section>
<?hard-pagebreak?>
<section><title>Practice: primary authoritative server</title>
	<para>1. Instead of only cachng the information from other servers, we will now make our server authoritative for our own domain.</para>
	<para>2. I choose the new TLD <command>.paul</command> and the domain <command>cobbaut.paul</command> and put the information in <command>/etc/bind/named.conf.local</command>.</para>
	<screen>root@ubu1010srv:/etc/bind# grep -C1 cobbaut named.conf.local 

zone "cobbaut.paul" {
	type master;
	file "/etc/bind/db.cobbaut.paul";
};</screen>
	<para>3. Also add a zone database file, similar to this one (add some A records for testing). Set the <command>Refresh</command> and <command>Retry</command> values not too high so you can sniff this traffic (this example makes the slave server contact the master every 300 seconds).</para>
	<screen>root@ubu1010srv:/etc/bind# cat db.cobbaut.paul 
;
; BIND data file for domain cobbaut.paul
;
$TTL	604800
@	IN	SOA	ns.cobbaut.paul. root.cobbaut.paul. (
                       20110516         ; Serial
                            300         ; Refresh
                            200         ; Retry
                        2419200         ; Expire
                         604800 )       ; Negative Cache TTL
;
@               IN      NS      ns.cobbaut.paul.
ns              IN      A       192.168.1.37
ubu1010srv      IN      A       192.168.1.37
anya            IN      A       192.168.1.1
mac             IN      A       192.168.1.30
root@ubu1010srv:/etc/bind#</screen>
	<para>4. Restart the DNS server and check your zone in the error log.</para>
	<screen>root@ubu1010srv:/etc/bind# grep cobbaut /var/log/daemon.log
May 16 00:33:49 ubu1010srv named[25449]: zone cobbaut.paul/IN: loaded\
 serial 20110516</screen>
	<para>5. Use dig or nslookup (or even ping) to test your A records.</para>
	<screen>root@ubu1010srv:/etc/bind# ping mac.cobbaut.paul
PING mac.cobbaut.paul (192.168.1.30) 56(84) bytes of data.
64 bytes from 192.168.1.30: icmp_req=1 ttl=64 time=2.28 ms
64 bytes from 192.168.1.30: icmp_req=1 ttl=64 time=2.31 ms (DUP!)
^C
--- mac.cobbaut.paul ping statistics ---
1 packets transmitted, 1 received, +1 duplicates, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 2.282/2.296/2.310/0.014 ms
root@ubu1010srv:/etc/bind# dig anya.cobbaut.paul

; &#060;&#060;>> DiG 9.7.1-P2 &#060;&#060;>> anya.cobbaut.paul
;; global options: +cmd
;; Got answer:
;; ->>HEADER&#060;&#060;- opcode: QUERY, status: NOERROR, id: 38237
;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 1, ADDITIONAL: 1

;; QUESTION SECTION:
;anya.cobbaut.paul.		IN	A

;; ANSWER SECTION:
anya.cobbaut.paul.	604800	IN	A	192.168.1.1

;; AUTHORITY SECTION:
cobbaut.paul.		604800	IN	NS	ns.cobbaut.paul.

;; ADDITIONAL SECTION:
ns.cobbaut.paul.	604800	IN	A	192.168.1.37

;; Query time: 1 msec
;; SERVER: 127.0.0.1#53(127.0.0.1)
;; WHEN: Mon May 16 00:38:22 2011
;; MSG SIZE  rcvd: 84

root@ubu1010srv:/etc/bind# </screen>
	<para>6. Our primary server appears to be up and running. Note the information here:</para>
	<screen>server os : Ubuntu 10.10
ip : 192.168.1.37
domain name: cobbaut.paul
server name: ns.cobbaut.paul</screen>
	<screen></screen>
</section>
<?hard-pagebreak?>
<section><title>Practice: reverse DNS</title>
	<para>1. We can add ip to name resolution to our dns-server using a reverse dns zone.</para>
	<para>2. Start by adding a .arpa zone to /etc/bind/named.conf.local like this (we set notify to no to avoid sending of notify messages to other name servers):</para>
	<screen>root@ubu1010srv:/etc/bind# grep -A4 arpa named.conf.local 
zone "1.168.192.in-addr.arpa" {
	type master;
	notify no;
	file "/etc/bind/db.192";
};</screen>
	<para>3. Also create a zone database file for this reverse lookup zone.</para>
	<screen>root@ubu1010srv:/etc/bind# cat db.192 
;
; BIND reverse data file for 192.168.1.0/24 network
;
$TTL	604800
@	IN	SOA	ns.cobbaut.paul root.cobbaut.paul. (
			20110516	; Serial
			 604800		; Refresh
			  86400		; Retry
			2419200		; Expire
			 604800 )	; Negative Cache TTL
;
@	IN	NS	ns.
37	IN	PTR	ns.cobbaut.paul.
1	IN	PTR	anya.cobbaut.paul.
30	IN	PTR	mac.cobbaut.paul.
root@ubu1010srv:/etc/bind# </screen>
	<para>4. Test with nslookup or dig:</para>
	<screen>root@ubu1010srv:/etc/bind# dig 1.168.192.in-addr.arpa AXFR</screen>
</section>
<?hard-pagebreak?>
<section><title>Practice: a DNS slave server</title>
	<para>1. A slave server transfers zone information over the network from a master server (a slave can also be a master). A primary server maintains zone records in its local file system. As an exercise, and to verify the work of all students, set up a slave server of all the master servers in the classroom.</para>
	<para>2. Before configuring the slave server, we have to allow transfers from our zone to this server. Remember that this is not very secure since transfers are in clear text and limited to an ip address. This example follows our demo from above. The ip of my slave server is 192.168.1.31, yours is probably different.</para>
	<screen>root@ubu1010srv:/etc/bind# grep -A2 cobbaut named.conf.local 
zone "cobbaut.paul" {
	type master;
	file "/etc/bind/db.cobbaut.paul";
	allow-transfer { 192.168.1.31; };
};
root@ubu1010srv:/etc/bind#</screen>
	<para>3. My slave server is running Fedora 14. Bind configuration files are only a little different. Below the addition of a slave zone to this server, note the ip address (192.168.1.37) of my master dns server for the cobbaut.paul zone.</para>
	<screen>[root@fedora14 etc]# grep cobbaut -A2 named.conf 
zone "cobbaut.paul" {
	type slave;
	file "/var/named/slaves/db.cobbaut.paul";
	masters { 192.168.1.37; };
};
[root@fedora14 etc]#</screen>
	<para>4. You might need to add the ip-address of the server on Fedora to allow queries other than from localhost.</para>
	<screen>[root@fedora14 etc]# grep 127 named.conf 
	listen-on port 53 { 127.0.0.1; 192.168.1.31; };</screen>
	<para>5. Restarting bind on the slave server should transfer the zone database file:</para>
	<screen>[root@fedora14 etc]# ls -l /var/named/slaves/
total 4
-rw-r--r--. 1 named named 387 May 16 03:23 db.cobbaut.paul
[root@fedora14 etc]#</screen>
</section>
